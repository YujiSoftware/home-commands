#!/bin/bash
## or
#!/bin/ksh
#!/bin/zsh
##
## httpstatus.sh で、HTTP のステータスコードをすばやくしらべる!
##      by SATOH Fumiyasu @ OSS Technology Corp., Japan
##         <https://GitHub.com/fumiyas/>
##         <https://twitter.com/satoh_fumiyasu>
##
## 一般的な Web Programmer ならば、HTTP Status code はすべて
## 暗記していると聞きました。
##
## しかし、僕は初心者なので、なかなか覚えきれていないので、
## HTTPのステータスコードをさがすのに便利なツールを用意しました。
## httpstatus.sh です。インストール方法は適当なディレクトリに
## 放り込んで chmod +x してください。
##
## 今日の参考文献:
##      http://blog.64p.org/entry/2013/02/21/121830
##
## 類似品:
##      http://mattn.kaoriya.net/software/vim/20130221123856.htm
##      http://yuroyoro.hatenablog.com/entry/2013/02/21/144004
##      http://d.hatena.ne.jp/hasegawayosuke/20130221/p1
##      http://blog.yappo.jp/yappo/archives/000805.html

## For zsh
builtin emulate -R ksh 2>/dev/null

set -u

latest() {
  curl \
    --silent \
    --fail-with-body \
    --show-error \
    --location \
    https://en.wikipedia.org/wiki/List_of_HTTP_status_codes \
  |sed -E -n \
    -e '/Unofficial codes<\/h[1-6]>/,$d' \
    -e 's!^<dl>!!' \
    -e 's!</dt>$!!' \
    -e 's!</span>(<span [^>]+></span>)* ?!!' \
    -e 's!<a [^>]+>([^<]+)</a>!\1!g' \
    -e 's!^<dt><span class="anchor" id="([1-5][0-9][0-9])">\1 ([^<(]+)!\1 \2!p' \
  |sed 's/"/'"'"'/g' \
  ;
}

httpstatus="\
100 Continue
101 Switching Protocols
102 Processing (WebDAV; RFC 2518)
103 Early Hints (RFC 8297)
200 OK
201 Created
202 Accepted
203 Non-Authoritative Information (since HTTP/1.1)
204 No Content
205 Reset Content
206 Partial Content
207 Multi-Status (WebDAV; RFC 4918)
208 Already Reported (WebDAV; RFC 5842)
226 IM Used (RFC 3229)
300 Multiple Choices
301 Moved Permanently
302 Found (Previously 'Moved temporarily')
303 See Other (since HTTP/1.1)
304 Not Modified
305 Use Proxy (since HTTP/1.1)
306 Switch Proxy
307 Temporary Redirect (since HTTP/1.1)
308 Permanent Redirect
400 Bad Request
401 Unauthorized
402 Payment Required
403 Forbidden
404 Not Found
405 Method Not Allowed
406 Not Acceptable
407 Proxy Authentication Required
408 Request Timeout
409 Conflict
410 Gone
411 Length Required
412 Precondition Failed
413 Payload Too Large
414 URI Too Long
415 Unsupported Media Type
416 Range Not Satisfiable
417 Expectation Failed
418 I'm a teapot (RFC 2324, RFC 7168)
421 Misdirected Request
422 Unprocessable Content
423 Locked (WebDAV; RFC 4918)
424 Failed Dependency (WebDAV; RFC 4918)
425 Too Early (RFC 8470)
426 Upgrade Required
428 Precondition Required (RFC 6585)
429 Too Many Requests (RFC 6585)
431 Request Header Fields Too Large (RFC 6585)
451 Unavailable For Legal Reasons (RFC 7725)
500 Internal Server Error
501 Not Implemented
502 Bad Gateway
503 Service Unavailable
504 Gateway Timeout
505 HTTP Version Not Supported
506 Variant Also Negotiates (RFC 2295)
507 Insufficient Storage (WebDAV; RFC 4918)
508 Loop Detected (WebDAV; RFC 5842)
510 Not Extended (RFC 2774)
511 Network Authentication Required (RFC 6585)
"

if [ $# -eq 0 ]; then
  echo "$httpstatus"
elif [ "$1" = "-" ]; then
  latest
else
  key_in="$*"
  case "$key_in" in
  [1-5][0-9][0-9])
    key="$key_in *"
    ;;
  [1-5][0-9]|[1-5])
    key="$key_in*"
    ;;
  *)
    typeset -l key
    key="*$key_in*"
    ;;
  esac

  typeset -l line_lc

  echo "$httpstatus" \
  |while read -r line; do
    line_lc="$line"
    case "$line_lc" in
    $key)
      echo "$line"
      ;;
    esac
  done
fi
