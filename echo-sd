#!/bin/bash
## -*- encoding: utf-8 -*- vim:tabstop=8:shiftwidth=2
##
## ＿人人人人人人＿
## ＞　突然の死　＜ ジェネレーター (Echo "sudden death" message)
## ￣Y^Y^Y^Y^Y^Y￣
## Copyright (C) 2013 SATOH Fumiyasu @ OSS Technology Corp., Japan
##               <https://github.com/fumiyas/home-commands/blob/master/echo-sd>
##               <https://twitter.com/satoh_fumiyasu>
##               <http://www.OSSTech.co.jp/>
##
## License: GNU General Public License version 3
##
## Requirements: bash 4.0+, ksh93+ or zsh 4.3+
##
## How to install:
##
##   $ mkdir -p $HOME/bin
##   $ cd $HOME/bin
##   $ wget -q https://raw.github.com/fumiyas/home-commands/master/echo-sd
##   $ chmod +x echo-sd
##   $ export PATH="$HOME/bin:$PATH"
##   $ alias echo=echo-sd
##
## Examples:
##
##   $ echo-sd
##    ＿人人人人人人＿
##   ＞　突然の死　＜
##   ￣Y^Y^Y^Y^Y^Y￣
##   $ echo-sd ぬるぽっ！!
##   ＿人人人人人人人人＿
##   ＞　ぬるぽっ！！　＜
##   ￣Y^Y^Y^Y^Y^YY^^Y￣
##   $ echo-sd -v ガッ！
##   ＿人人人＿
##   ＞　　　＜
##   ＞　ガ　＜
##   ＞　ッ　＜
##   ＞　！　＜
##   ＞　　　＜
##   ￣Y^Y^Y￣
##
## TODO:
##
##   * 縦書きモードでの複数行のセリフ対応
##
## Inspired by:
##
##   * 突然の死ジェネレータ - powered by starwing.net, created by @karno.
##     http://starwing.net/suddenly_death.html
##   * 突然の死ジェネレータ - 純粋関数空間
##     http://tanakh.jp/tools/sudden.html
##

set -u

SD_lang_orig="${LANG-}"
if [[ ${SD_lang_orig#*.} != @(UTF-8|utf-8|UTF8|utf8) ]]; then
  if type SD_locale >/dev/null 2>&1; then
    while read -r SD_locale; do
      if [[ ${SD_locale#*.} == @(UTF-8|utf-8|UTF8|utf8) ]]; then
	if [[ ${SD_locale%.*} == ja_JP ]]; then
	  SD_lang_ja="$SD_locale"
	else
	  SD_lang="$SD_locale"
	fi
      fi
    done < <(locale -a)
  fi
fi
SD_lang="${SD_lang_ja-${SD_lang-ja_JP.UTF-8}}"
${SD_lang_ja+unset SD_lang_ja}

typeset -A SD_map
SD_map['。']='   。 '
SD_map['、']='   、 '
SD_map['ー']='  ｜  '
SD_map['…']='  ︙  '
SD_map['‥']='  ︰  '
SD_map['「']='    ┐'
SD_map['」']='└    '
SD_map['｢']='   ┐'
SD_map['｣']='└   '
SD_map['-']='  |  '
SD_map['ｰ']='  |  '
SD_map[',']="   ' "
SD_map['､']='   ` '

function SD_echo_horizontal {
  export LANG="$SD_lang"
  typeset script template header footer

  script="${1-突然の死}"
  template="${script//[ -~｡-ﾟ]/ }"
  template="${script//[ -~¢£¥¦¬¯｡-ﾟ]/ }"
  template="${template//[! ]/  }"
  header="＿人${template//  /人}人＿"
  footer="￣Y^${template//  /Y^}Y￣"

  echo "${header/ /}"
  echo "＞　${script}　＜"
  echo "${footer/ /}"

  export LANG="$SD_lang_orig"
}

function SD_echo_vertical {
  export LANG="$SD_lang"
  typeset script template header footer letter

  script="　${1-突然の死}　"
  trailer="$script"

  echo "＿人人人＿"
  while [[ -n $script ]]; do
    trailer="${trailer#?}"
    letter="${script%$trailer}"
    script="${script#?}"

    if [[ -z ${SD_map[$letter]-} ]]; then
      typeset trailer2="${trailer#?}"
      typeset next="${script%$trailer2}"
      if [[ $next == @(ﾞ|ﾟ) ]] || [[ $letter$next == @([\!|\?][\!|\?]) ]]; then
	letter="  $letter$next "
	trailer="$trailer2"
	script="${script#?}"
      else
	letter="  $letter  "
      fi
    else
      letter="${SD_map[$letter]}"
    fi
    echo "＞${letter//  /　}＜"
  done
  echo "￣Y^Y^Y￣"

  export LANG="$SD_lang_orig"
}

function SD_echo_main
{
  typeset vertical=

  if [[ ${1-} = -h ]]; then
    echo "Usage: echo-sd [-v] [script]"
    exit 0
  fi

  if [[ ${1-} = -v ]]; then
    vertical="set"
    shift
  fi

  if [[ -z ${vertical-} ]]; then
    SD_echo_horizontal ${1+"$@"}
  else
    SD_echo_vertical ${1+"$@"}
  fi
}

if [[ ${zsh_eval_context-toplevel} == toplevel ]] && [[ ${0##*/} == echo-sd ]]; then
  SD_echo_main "$@"
  exit $?
fi

return 0

