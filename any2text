#!/bin/bash
##
## Any file contents to text translator
## Copyright (c) 2020-2022 SATOH Fumiyasu @ OSSTech Corp., Japan
##
## License: GNU General Public License version 3
##
## Required external commands:
##   sed(1)
##   perl(1)
##   nkf(1)
##   pdftotext(1) from poppler
##   wvWare(1)
##   xlhtml(1)
##   ppthtml(1) from xlhtml
##   unzip(1)
##

set -u
set -o pipefail || exit $?		## bash 3.0+

perr()
{
  echo "$0: ERROR: $1" 1>&2
}

pdie()
{
  perr "$1"
  exit "${2-1}"
}

html2text() {
  ## FIXME: Decode &#XXXX;
  sed \
    -e ':a' \
    -e '/<[^>]*$/ { N; ba; }' \
    -e 's/<meta[^>]*  *content="\([^"]*\)"[^>]*>/\1/g' \
    -e 's/<[^>]*>//g' \
    -e 's/&nbsp;/ /g' \
    -e 's/&quot;/"/g' \
    -e 's/&gt;/>/g' \
    -e 's/&lt;/</g' \
    -e 's/&amp;/\&/g' \
    -e '/^ *$/d' \
  ;
}

xml2text() {
  ## FIXME: Decode &#XXXX;
  sed \
    -e ':a' \
    -e '/<[^>]*$/ { N; ba; }' \
    -e 's/<[^>]*>//g' \
    -e 's/&nbsp;/ /g' \
    -e 's/&quot;/"/g' \
    -e "s/&apos;/'/g" \
    -e 's/&gt;/>/g' \
    -e 's/&lt;/</g' \
    -e 's/&#10;/\n/g' \
    -e 's/&amp;/\&/g' \
    -e '/^ *$/d' \
  ;
}

## OpenDocument Format
odf2text() {
  unzip -p "$1" 'meta.xml' 'content.xml' \
  |sed -E \
    -e 's#(<text:tab/>|</text:p></table:table-cell>)#\t#g' \
    -e 's#<table:table-cell [^>]*><text:p[ /][^>]*>##g' \
    -e 's#(<text:line-break/>|<text:p [^>]*>|</(text:[hp]|table:table-row)>)#\n#g' \
  |xml2text \
  |sed -E \
    -e 's/(。)(.)/\1\n\2/g' \
  ;
}

## Office Open XML
ooxml2text() {
  unzip -p "$@" \
  |perl -p \
    -e 's#<(wp:(?:align|posOffset))[ >].*?</\1>##g;' \
    -e 's#<(wp14:pct(?:Width|Height))[ >].*?</\1>##g;' \
    -e 's#<(w:(?:del|instrText))[ >].*?</\1>##g;' \
    -e 's#<w:tab/># #g;' \
    -e 's#</?w:tbl>#======================================================================\n#g;' \
    -e 's#</w:tr>#----------------------------------------------------------------------\n#g;' \
    -e 's#<w:br />#\n#g;' \
    -e 's#</w:p>#\n#g;' \
    -e 's#</t>#\n#g;' \
  |xml2text \
  |sed -E \
    -e 's/(。)(.)/\1\n\2/g' \
  ;
}

## ======================================================================

for file_name in "$@"; do
  file_ext="${file_name##*.}"

  case "$file_ext" in
  txt)
    <"$file_name" \
    nkf -w
    ;;
  html)
    <"$file_name" \
    html2text |nkf -w
    ;;
  zip)
    <"$file_name" \
    unzip -l /dev/stdin |sed '1,3d;/^-/d;$d'
    ;;
  o[dt][tspg])
    <"$file_name" \
    odf2text /dev/stdin
    ;;
  pdf)
    <"$file_name" \
    pdftotext -htmlmeta -enc UTF-8 -nopgbrk - - \
    |html2text \
    ;
    ;;
  doc)
    #catdoc -d utf-8 -w /dev/stdin
    <"$file_name" \
    wvWare --charset=UTF-8 --nographics /dev/stdin \
    |html2text \
    ;
    ;;
  xls)
    #xls2csv -q0 /dev/stdin
    <"$file_name" \
    xlhtml -a -te -nc -fw /dev/stdin \
    |sed \
      -e 's/<TD[^>]*>&nbsp;//g' \
      -e 's/<TD[^>]*>/ /g' \
      -e "s/^<meta .*<\/TITLE>//" \
      -e "s/<I>Spreadsheet's Author:.*xlhtml [^<]*//" \
    |html2text \
    ;
    ;;
  ppt)
    <"$file_name" \
    ppthtml /dev/stdin \
    |sed \
      -e 's/^<HTML>.*//' \
      -e 's/^<hr>.*>pptHtml<.*//' \
    |html2text \
    ;
    ;;
  do[ct][xm])
    <"$file_name" \
    ooxml2text /dev/stdin 'word/document.xml'
    ;;
  xl[st][xm])
    <"$file_name" \
    ooxml2text /dev/stdin 'xl/sharedStrings.xml'
    ;;
  pp[ts][xm]|pot[xm]|sld[xm])
    <"$file_name" \
    ooxml2text /dev/stdin 'ppt/slides/slide*.xml'
    ;;
  *)
    pdie "Unknown file type: $file_ext ($file_name)"
    ;;
  esac
done
