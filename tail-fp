#!/bin/ksh
##
## Do `tail -f FILE` and exit when PATTERN is found
## Copyright (c) 2012 SATOH Fumiyasu @ OSS Technology Corp, Japan
##               <http://www.OSSTech.co.jp/>
##               <https://GitHub.com/fumiyas/>
##
## License: GNU General Public License version 3
## Date: 2012-08-08, since 2012-08-08
##
## Inspired by: http://blog.riywo.com/2012/08/08/042340
##

set -u

if [[ -n ${ZSH_VERSION-} ]]; then
  echo "$0: ERROR: Cannot run under ksh emulation by zsh" 1>&2
  exit 1
fi

if [[ $# -lt 2 ]]; then
  echo "Usage: $0 PATTERN FILE ..."
  exit 1
fi

pattern="$1"; shift

## Native ksh (not ksh emulation by zsh) steps to the next command-line
## when the last command on the pipeline is terminated, whether the
## other command is terminated or not.
tail -f "$@" \
|while read -r line; do
  echo "$line"
  [[ $line = @($pattern) ]] && break
done
## Perl verison:
#|perl -e 'while (<STDIN>) { print; exit if (/$ARGV[0]/o); }' "$pattern"

## Trap SIGTERM to avoid "Terminated" message by an interactive shell
trap '' TERM
## Terminate tail process
kill -TERM -$$

exit 0

